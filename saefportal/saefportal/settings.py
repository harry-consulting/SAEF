from __future__ import absolute_import, unicode_literals

"""
Django settings for saefportal project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG")

EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT')
EMAIL_USE_TLS = config('EMAIL_USE_TLS')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_REGISTER_NOTIFY = None

MEDIA_ROOT = config("MEDIA_ROOT")
MEDIA_URL = "/media/"

FIXTURE_DIRS = ('database/data/',)

ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS').split(" ")

# Application definition

INSTALLED_APPS = [
    'saef.apps.SaefConfig',
    'jobs.apps.JobsConfig',
    'datasets.apps.DatasetsConfig',
    'users.apps.UsersConfig',
    'restapi.apps.RestapiConfig',
    'analyzer.apps.AnalyzerConfig',
    'home.apps.HomeConfig',
    'settings.apps.SettingsConfig',
    'datalakes.apps.DatalakesConfig',
    'datastores.apps.DatastoresConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_bootstrap_breadcrumbs',
    'django_extensions',
    'bootstrap_modal_forms',
    'django_cleanup.apps.CleanupConfig',
    'bootstrap_pagination',
    'rest_framework_tracking',
    'django_celery_beat',
    'simple_history',
    'notifications',
    'solo.apps.SoloAppConfig'
]

os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'saefportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'saefportal.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        "NAME": config("SQL_DATABASE"),
        "USER": config("SQL_USER"),
        "PASSWORD": config("SQL_PASSWORD"),
        "HOST": config("SQL_HOST"),
        "PORT": config("SQL_PORT"),
    },
    'postgres_test': {
        'ENGINE': 'django.db.backends.postgresql',
        "NAME": config("SQL_TEST_DATABASE"),
        "USER": config("SQL_USER"),
        "PASSWORD": config("SQL_PASSWORD"),
        "HOST": config("SQL_TEST_HOST"),
        "PORT": config("SQL_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

DATETIME_FORMAT = "Y-m-d H:i:s"

USE_TZ = True

USE_I18N = True

USE_L10N = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Simple history.
SIMPLE_HISTORY_HISTORY_CHANGE_REASON_USE_TEXT_FIELD = True

# Django REST framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'restapi.renderers.CustomBrowsableAPIRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'EXCEPTION_HANDLER': 'restapi.exception_handlers.permission_denied_exception_handler'
}

AUTH_USER_MODEL = 'users.User'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
]

LOGIN_URL = '/user/login/'
LOGOUT_REDIRECT_URL = '/user/login/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

TEST_RUNNER = 'xmlrunner.extra.djangotestrunner.XMLTestRunner'
TEST_OUTPUT_DIR = './test-reports/unittest'
TEST_OUTPUT_FILE_NAME = 'unittest.xml'

# Calculation configuration
COMPARISON_PROFILE_THRESHOLD = config('COMPARISON_PROFILE_THRESHOLD', cast=int, default=1)
EXPECTED_DATASET_COLUMN_DEFINITION_THRESHOLD = config('EXPECTED_DATASET_COLUMN_DEFINITION_THRESHOLD', cast=int,
                                                      default=2)

DISABLE_TRANSACTION_MANAGEMENT = True

# Recordset settings
SQL_QUERY_DEFAULT_LIMIT = config('SQL_QUERY_DEFAULT_LIMIT', default=50, cast=int)

# Test databases
TEST_POSTGRES_DB_NAME = config('SQL_TEST_DATABASE', default=None)
TEST_POSTGRES_USERNAME = config('SQL_USER', default=None)
TEST_POSTGRES_PASSWORD = config('SQL_PASSWORD', default=None)
TEST_POSTGRES_HOST = config('SQL_TEST_HOST', default=None)
TEST_POSTGRES_PORT = config('SQL_PORT', default=None)

TEST_AZURE_DB_NAME = config('TEST_AZURE_DB_NAME', default=None)
TEST_AZURE_USERNAME = config('TEST_AZURE_USER', default=None)
TEST_AZURE_PASSWORD = config('TEST_AZURE_PASSWORD', default=None)
TEST_AZURE_HOST = config('TEST_AZURE_HOST', default=None)
TEST_AZURE_PORT = config('TEST_AZURE_PORT', default=None)

DJANGO_NOTIFICATIONS_CONFIG = {'USE_JSONFIELD': True}
